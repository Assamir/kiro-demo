# Staging Environment Configuration
spring.profiles.active=staging

# Application Configuration
server.port=8080
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# Database Configuration for Staging
spring.datasource.url=jdbc:postgresql://database:5432/${POSTGRES_DB:insurance_db_staging}
spring.datasource.username=${POSTGRES_USER:insurance_user}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration (smaller pool for staging)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.pool-name=InsuranceHikariCP-Staging

# JPA Configuration for Staging
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# Security Configuration
app.jwt.secret=${JWT_SECRET:stagingSecretKeyForTestingOnly}
app.jwt.expiration=3600000
app.jwt.refresh-expiration=86400000

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost,https://staging.insurance.local}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Swagger/OpenAPI Configuration (enabled in staging)
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,configprops
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Metrics Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.tags.application=insurance-backoffice-staging

# Logging Configuration for Staging
logging.level.com.insurance.backoffice=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=INFO
logging.level.org.flywaydb=INFO

# Logging Pattern and File Configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=/app/logs/insurance-backoffice-staging.log
logging.file.max-size=10MB
logging.file.max-history=7
logging.file.total-size-cap=500MB

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Data Seeding Configuration (enabled in staging for testing)
app.data-seeding.enabled=true
app.data-seeding.seed-users=true
app.data-seeding.seed-clients=true
app.data-seeding.seed-vehicles=true
app.data-seeding.seed-policies=true
app.data-seeding.seed-rating-tables=true
app.data-seeding.force-seeding=false
app.data-seeding.sample-size=20

# Performance Configuration (reduced for staging)
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=5
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=15000
server.tomcat.max-connections=2048
server.tomcat.accept-count=50

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=rating-tables,policies,users

# Application Info
info.app.name=Insurance Backoffice System (Staging)
info.app.description=Staging Environment for Insurance Policy Management System
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@